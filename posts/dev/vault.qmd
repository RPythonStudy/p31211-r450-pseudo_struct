---
title: "민감정보관리시스템 구축"
description: "개인정보보호 위해 HashiCorp Vault 구축"
author: "BenKorea"
date: "2025-06-18"
date-modified: last-modified
categories: [Vault]
---

## Vault Docker Deployment

### 디렉토리

-   마운트에 필요한 디렉토리를 만들고

```{r vault-mkdir, eval=FALSE, filename="bash"}
sudo mkdir -p ~/projects/vault
```

-   적절한 권한을 부여

```{r vault-mkdir-sub, eval=FALSE, filename="bash"}
sudo mkdir -p ~/projects/vault/config ~/projects/vault/file ~/projects/vault/certs ~/projects/vault/logs
sudo chown 100:100 ~/projects/vault/config ~/projects/vault/file ~/projects/vault/certs ~/projects/vault/logs
sudo chmod 700 ~/projects/vault/config ~/projects/vault/file ~/projects/vault/certs ~/projects/vault/logs
```

-   검증

```{r vault-mkdir-validation, eval=FALSE, filename="bash"}
sudo ls -ld ~/projects/vault ~/projects/vault/config ~/projects/vault/certs ~/projects/vault/file ~/projects/vault/logs
```

### 1회용 인증서만들기

```{r openssl-req, eval=FALSE, filename="bash"}
sudo openssl req \
  -x509 \
  -newkey rsa:2048 \
  -keyout projects/vault/certs/vault.key \
  -out projects/vault/certs/vault.crt \
  -days 14 \
  -nodes \
  -subj "/C=KR/ST=Seoul/L=Seoul/O=KIRAMS/OU=RPythonStudy/CN=localhost" \
  -addext "subjectAltName = DNS:localhost, IP:127.0.0.1, DNS:keycloak-server, DNS:openldap-server"
```

-   컨테이너 내 vault가 사용할 수 있도록 권한설정

```{r chown-dir, eval=FALSE, filename="bash"}
sudo chown 100:100 ./projects/vault/certs/vault.key
```

-   검증

```{r openssl-req-validation, eval=FALSE, filename="bash"}
sudo ls -l projects/vault/certs
```

```{r openssl-subject-SAN-validation, eval=FALSE, filename="bash"}
sudo openssl x509 -in projects/vault/certs/vault.crt -noout -text | grep -E 'Subject:|DNS:|IP Address'
```

### docker-compose.yml 작성

```{r nano-yml, eval=FALSE, filename="bash"}
sudo nano projects/vault/docker-compose.yml
```

```{r docker-compose, eval=FALSE, filename="docker-compose.yml"}
services:
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_LOCAL_CONFIG: |
        {
          "storage": {"file": {"path": "/vault/file"}},
          "listener": [
            {"tcp": { "address": "0.0.0.0:8200", "tls_cert_file": "/vault/certs/vault.crt", "tls_key_file": "/vault/certs/vault.key"}}
          ],
          "default_lease_ttl": "168h",
          "max_lease_ttl": "720h",
          "ui": true
        }
      VAULT_API_ADDR: "https://vault:8200"   # <--- 이 줄만 추가
    ports:
      - "8200:8200"
    volumes:
      - ./file:/vault/file
      - ./certs:/vault/certs      
    restart: unless-stopped
    command: server
```

-   검증

```{r api-addr-validation, eval=FALSE, filename="bash"}
docker exec -it vault env | grep VAULT_API_ADDR
```

### api를 이용한 컨테이너 vault 초기화

## Vault 정책/계정/목적 매트릭스 예시

-   vault

| 정책명(policy) | 계정명(entity/role) | 목적/설명 |
|-------------------|-------------------|----------------------------------|
| svc-nmdose-prod-policy | svc-nmdose-prod | nmdose 운영서비스가 운영 비밀/인증서를 읽기 위해 사용 |
| svc-pseudo_struct-prod-policy | svc-pseudo_struct-prod | pseudo_struct 운영서비스가 운영 비밀/인증서를 읽기 위해 사용 |
| svc-openldap-prod-policy | svc-openldap-prod | OpenLDAP 운영서비스의 비밀/인증서 접근 |
| svc-keycloak-prod-policy | svc-keycloak-prod | Keycloak 운영서비스의 비밀/인증서 접근 |
| svc-db-prod-policy | svc-db-prod | DB 접속 정보 등 운영환경 비밀 접근 |
| svc-kibana-prod-policy | svc-kibana-prod | Kibana(감사 시스템) 운영환경 비밀 접근 |
| svc-dashboard-prod-policy | svc-dashboard-prod | 대시보드/통계 운영환경 비밀 접근 |
| svc-nmdose-dev-policy | svc-nmdose-dev | nmdose 개발환경 비밀/인증서 접근 |
| svc-pseudo_struct-dev-policy | svc-pseudo_struct-dev | pseudo_struct 개발환경 비밀/인증서 접근 |
| svc-openldap-dev-policy | svc-openldap-dev | OpenLDAP 개발환경 비밀/인증서 접근 |
| svc-keycloak-dev-policy | svc-keycloak-dev | Keycloak 개발환경 비밀/인증서 접근 |
| svc-db-dev-policy | svc-db-dev | DB 개발환경 비밀 접근 |
| svc-kibana-dev-policy | svc-kibana-dev | Kibana 개발환경 비밀 접근 |
| svc-dashboard-dev-policy | svc-dashboard-dev | 대시보드 개발환경 비밀 접근 |
| svc-nmdose-stg-policy | svc-nmdose-stg | nmdose 스테이징(테스트) 비밀/인증서 접근 |
| svc-pseudo_struct-stg-policy | svc-pseudo_struct-stg | pseudo_struct 스테이징(테스트) 비밀/인증서 접근 |
| svc-openldap-stg-policy | svc-openldap-stg | OpenLDAP 스테이징(테스트) 비밀/인증서 접근 |
| svc-keycloak-stg-policy | svc-keycloak-stg | Keycloak 스테이징(테스트) 비밀/인증서 접근 |
| svc-db-stg-policy | svc-db-stg | DB 스테이징(테스트) 비밀 접근 |
| svc-kibana-stg-policy | svc-kibana-stg | Kibana 스테이징(테스트) 비밀 접근 |
| svc-dashboard-stg-policy | svc-dashboard-stg | 대시보드 스테이징(테스트) 비밀 접근 |
| vault-admin-policy | vault-admin | Vault 전체 관리, 정책/계정/시스템 설정 |
| vault-audit-policy | vault-audit | Vault 감사(audit) 로그 열람 |
| key-admin-policy | key-admin | 전체 인증서/키 관리, PKI 엔진 전담 |
| pseudo-key-admin-policy | pseudo-key-admin | 가명화키(암복호화) 생성·관리, 로테이션 등 |
| ldap-secret-admin-policy | ldap-secret-admin | OpenLDAP 비밀/인증서 생성·관리 |
| keycloak-secret-admin-policy | keycloak-secret-admin | Keycloak 비밀/인증서 생성·관리 |
| db-secret-admin-policy | db-secret-admin | DB 비밀/인증서 생성·관리 |