---
title: "중앙 로그관리 시스템"
description: "ELK Stack"
author: "BenKorea"
date: "2025-06-27"
date-modified: last-modified
categories: [ELK Stack]
---

## 도커 정보 파악

### 시간 일치

-   개발PC의 timezone을 확인하고

```{r tz-check, eval=FALSE, filename="bash"}
timedatectl
```

-   "컨테이너의 타임존 관리를 위해 호스트의 /etc/localtime 및 /usr/share/zoneinfo를 컨테이너 내부에 바인드 마운트(bind mount)하여 호스트와 동일한 타임존 환경을 보장한다."
-   환경변수에 TZ=Asia/Seoul 설정도 한다.

### 컨테이터 서비스 id 확인

-   컨테이너별 서비스 uid/gid를 확인해야 한다.

```{r id-check, eval=FALSE, filename="bash"}
 sudo docker exec logstash id
```

logstash 1000:1000 kibana 1000:1000 elasticsearch 1000:1000

## docker 정리

```{r docker-rearragne, eval=FALSE, filename="bash"}
sudo docker container prune
```

## ELK Stack 설치

### 디렉토리 생성


```{r elk-rm, eval=FALSE, filename="bash"}
sudo rm -rf ~/projects/p31211-r450-pseudo_struct/docker
```

```{r containter-mkdir, eval=FALSE, filename="bash"}
# ELK
mkdir -p ./docker/elk/esdata
mkdir -p ./docker/elk/logstash/pipeline

# KeyCloak
mkdir -p ./docker/keycloak/data

# Vault
mkdir -p ./docker/vault/data

# OoenLDAP
mkdir -p ./docker/openldap/data
mkdir -p ./docker/openldap/config
```


```{r own-mod-change, eval=FALSE, filename="bash"}
# ELK
sudo chown -R 1000:1000 ./docker/elk
sudo chown -R 1000:1000 ./docker/elk/esdata
sudo chown -R 1000:1000 ./docker/elk/logstash
sudo chown -R 1000:1000 ./docker/elk/logstash/pipeline
sudo chmod -R 750 ./docker/elk
sudo chmod -R 750 ./docker/elk/esdata
sudo chmod -R 750 ./docker/elk/logstash
sudo chmod -R 750 ./docker/elk/logstash/pipeline

# Keycloak
sudo chown -R 1000:0 ./docker/keycloak
sudo chown -R 1000:0 ./docker/keycloak/data
sudo chmod -R 750 ./docker/keycloak
sudo chmod -R 750 ./docker/keycloak/data

# Vault
sudo chown -R 100:101 ./docker/vault
sudo chown -R 100:101 ./docker/vault/data
sudo chmod -R 750 ./docker/vault
sudo chmod -R 750 ./docker/vault/data

# OpenLDAP
sudo chown -R 101:103 ./docker/openldap
sudo chown -R 101:103 ./docker/openldap/data
sudo chown -R 101:103 ./docker/openldap/config
sudo chmod -R 750 ./docker/openldap
sudo chmod -R 750 ./docker/openldap/data
sudo chmod -R 750 ./docker/openldap/config

```

-   검증

```{r own-mode-validation, eval=FALSE, filename="bash"}
# ELK 관련 폴더 권한/검증
sudo ls -ld ./docker/elk \
  ./docker/elk/esdata \
  ./docker/elk/logstash \
  ./docker/elk/logstash/pipeline

# Keycloak 폴더 권한/검증
sudo ls -ld ./docker/keycloak \
  ./docker/keycloak/data

# Vault 폴더 권한/검증
sudo ls -ld ./docker/vault \
  ./docker/vault/data

# OpenLDAP 폴더 권한/검증
sudo ls -ld ./docker/openldap \
  ./docker/openldap/data \
  ./docker/openldap/config

```

### docker-compose.yml 작성

```{r nano-yml, eval=FALSE, filename="bash"}
sudo nano ~/projects/p31211-r450-pseudo_struct/docker-compose.yml
```

```{r nano-yml-short, eval=FALSE, filename="bash"}
sudo nano docker-compose.yml
```

```{r docker-compose, eval=FALSE, filename="docker-compose.yml"}
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - discovery.type=single-node
      - TZ=Asia/Seoul
    mem_limit: 1792m
    ports:
      - "9200:9200"
    volumes:
      - ./docker/elk/esdata:/usr/share/elasticsearch/data
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - elknet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    environment:
      - TZ=Asia/Seoul
    mem_limit: 640m
    ports:
      - "5601:5601"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - elknet

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - LS_JAVA_OPTS=-Xms384m -Xmx384m
      - TZ=Asia/Seoul
    mem_limit: 640m
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    volumes:
      - ./docker/elk/logstash/pipeline:/usr/share/logstash/pipeline
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - elknet

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      - KC_HEAP=384
      - TZ=Asia/Seoul
    mem_limit: 640m
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./docker/keycloak/data:/opt/keycloak/data
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - backend

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    mem_limit: 256m
    ports:
      - "8200:8200"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./docker/vault/data:/vault/data
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - backend

  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    mem_limit: 256m
    ports:
      - "389:389"
      - "636:636"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./docker/openldap/data:/var/lib/ldap
      - ./docker/openldap/config:/etc/ldap/slapd.d
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - backend

networks:
  elknet:
    driver: bridge
  backend:
    driver: bridge

```
