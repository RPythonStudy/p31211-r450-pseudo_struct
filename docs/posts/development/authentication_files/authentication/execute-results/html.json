{
  "hash": "93879c05ed8e0b40fd803b4bef625fa5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"인증시스템구축\"\ndescription: \"게인정보보호법 적합하도록\"\nauthor: \"BenKorea feat Copilot\"\ndate: \"2024-06-22\"\ndate-modified: last-modified\ncategories: [Authentication, KeyCloak]\n---\n\n\n\n\n### 인증 시스템 선택\n\n-   개인정보보호법 준수를 위해 사용자별 권한 관리 필요\n-   오픈소스 Keycloak 도입 결정\n\n### 사용자 역할 정의\n\n-   관리자(nmdose-superuser):\n    -   시스템 설정, 사용자 관리, 감사 기록 조회 등 모든 권한 보유\n-   일반 사용자(nmdose-user):\n    -   선량 정보 조회 등 제한된 기능만 접근 가능\n\n### keycloak 설치\n\n-   인증 서버는 nmdose 시스템과 분리된 서버에 설치하는 것이 이상적이나, 개발 단계에서는 Docker를 활용해 분리된 서버를 모사함\n-   운영(Production) 환경에서는 별도의 데이터베이스 지정 및 HTTPS(TLS) 인증서 적용 필요\n-   병원 내부망(도메인 없는 사설망)에서는 공인 인증서가 아닌 “자가서명 인증서” 또는 “사내 CA 인증서”를 사용 필요하므로\n    -   ubuntu에 제공되는 openssl로 자가서명 인증서를 발급\n\n\n\n\n::: {.cell filename='bash'}\n\n```{.r .cell-code}\nopenssl req \\\n  -x509 \\\n  -newkey rsa:2048 \\\n  -keyout mykey.key \\\n  -out mycert.crt \\\n  -days 365 \\\n  -nodes \\\n  -subj \"/C=KR/ST=Seoul/L=Seoul/O=KCCH/OU=RPythonStudy/CN=localhost\" \\\n  -addext \"subjectAltName = DNS:localhost, IP:127.0.0.1, DNS:keycloak-server\"\n```\n:::\n\n\n\n\n업계표준에 따른 저장폴더는\n\n\n\n\n::: {.cell filename='bash'}\n\n```{.r .cell-code}\nsudo mkdir -p /etc/nmdose/certs/\n```\n:::\n\n::: {.cell filename='bash'}\n\n```{.r .cell-code}\nsudo cp ~/projects/keycloak-server/mycert.crt /etc/nmdose/certs/server.crt\nsudo cp ~/projects/keycloak-server/mykey.key /etc/nmdose/certs/server.key\n```\n:::\n\n\n\n\n파일의 권한에 대해서도 항상 신경써야 한다.\n\n\n\n\n::: {.cell filename='bash'}\n\n```{.r .cell-code}\nsudo chmod 644 /etc/nmdose/certs/server.key\nsudo chmod 644 /etc/nmdose/certs/server.crt\n```\n:::\n\n\n\n\n그러나 chmod 644는 보안정책에 위반되므로 vault로 동적으로 주입하는 것으로 전환해야 함.\n\n아래는 chmod 644에서 성공하기는 했음. 그러나 vault로 수정이 필요함.\n\n매뉴얼에 따르면 keycloak production mode는 3가지 설정이 필요하다. - HTTPS - hostname - TLS\n\n커맨드라인에서 bin/kc.\\[sh\\|bat\\] start --https-certificate-file=/path/to/certfile.pem --https-certificate-key-file=/path/to/keyfile.pem 명령으로 HTTPS/TLS에 필요한 certificate 파일과 key 파일의 경로를 전달한다.\n\n\n\n\n::: {.cell filename='projects/keycloak-server/docker-compose.yml'}\n\n```{.r .cell-code}\nversion: \"3.8\"\n\nservices:\n  postgres:\n    image: postgres:16\n    container_name: nmdose-postgres\n    restart: always\n    environment:\n      POSTGRES_DB: keycloak\n      POSTGRES_USER: keycloak\n      POSTGRES_PASSWORD: keycloakpass\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    networks:\n      - nmdose-net\n\n  keycloak:\n    image: quay.io/keycloak/keycloak:25.0.0\n    container_name: nmdose-keycloak\n    command:\n      - start\n      - --https-certificate-file=/etc/x509/https/tls.crt\n      - --https-certificate-key-file=/etc/x509/https/tls.key\n      - --db=postgres\n      - --db-url-host=postgres\n      - --db-username=keycloak\n      - --db-password=keycloakpass\n      - --db-database=keycloak\n      - --hostname=localhost\n    environment:\n      KC_HEALTH_ENABLED: \"true\"\n      KC_METRICS_ENABLED: \"true\"\n      KEYCLOAK_ADMIN: admin\n      KEYCLOAK_ADMIN_PASSWORD: adminpass\n    volumes:\n      # 인증서 마운트: 호스트 → 컨테이너\n      - /etc/nmdose/certs/server.crt:/etc/x509/https/tls.crt:ro\n      - /etc/nmdose/certs/server.key:/etc/x509/https/tls.key:ro\n    depends_on:\n      - postgres\n    ports:\n      - \"8443:8443\"\n    networks:\n      - nmdose-net\n\nvolumes:\n  postgres_data:\n\nnetworks:\n  nmdose-net:\n    driver: bridge\n```\n:::\n\n::: {.cell filename='bash'}\n\n```{.r .cell-code}\nsudo docker compose up -d\n```\n:::\n\n::: {.cell filename='bash'}\n\n```{.r .cell-code}\nsudo docker compose ps\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}